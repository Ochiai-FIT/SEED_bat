REM [000][SYSBATCHDT_HA]
@ECHO OFF

REM ログフォルダ作成
IF NOT EXIST %~DP0..\logs MKDIR %~DP0..\logs

REM コマンドフォルダ作成
IF NOT EXIST %~DP0..\cmd MKDIR %~DP0..\cmd

REM ログファイルの情報
SET OUTFILE=%~DP0../logs/setup.log
SET OUTTIME=%~DP0../logs/time.log

REM ベースフォルダ
SET BASEDIR=%~DP0..

REM 更新対象の情報
SET INFOSCRIPT=%~DP0..\cmd\%~N0.DB2


SET MSG=%DATE% %TIME% INAPARM.SYSBATCHDT_HA MERGE処理
ECHO %MSG%
>> %OUTFILE% ECHO %MSG%
"%MYSQLPATH%mysql" %OPTION% -h %HOST% %DB_NAME% -u %USER_ID% --show-warnings -vv -e "UPDATE INAPARM.SYSBATCHDT_HA T1, (SELECT 'DAILY' AS SMODE, PN.HATDT AS DT, CAST(DATE_FORMAT(PN.HATDT, '%%Y%%m%%d') AS SIGNED) AS DT_INT, CAST(PN.HATDT AS DATETIME) AS DTTIME, CAST(CAST(PN.HATDT AS DATETIME) AS SIGNED) AS DTTIME_INT, WEEKDAY(PN.HATDT) + 1 AS YOBI FROM (SELECT T1.HATCALCFLG, CASE WHEN T1.HATMD <> T1.NYHOLS01 AND T1.HATMD <> T1.NYHOLS02 AND T1.HATMD <> T1.NYHOLS03 THEN T1.HATDT WHEN T1.HATMD <> T1.NYHOLS01 AND T1.HATMD <> T1.NYHOLS02 AND T1.HATMD = T1.NYHOLS03 THEN T1.HATDT01 WHEN T1.HATMD <> T1.NYHOLS01 AND T1.HATMD = T1.NYHOLS02 AND T1.HATMD01 <> T1.NYHOLS03 THEN T1.HATDT01 WHEN T1.HATMD <> T1.NYHOLS01 AND T1.HATMD = T1.NYHOLS02 AND T1.HATMD01 = T1.NYHOLS03 THEN T1.HATDT02 WHEN T1.HATMD = T1.NYHOLS01 AND T1.HATMD01 <> T1.NYHOLS02 THEN T1.HATDT01 WHEN T1.HATMD = T1.NYHOLS01 AND T1.HATMD01 = T1.NYHOLS02 AND T1.HATMD02 <> T1.NYHOLS03 THEN T1.HATDT02 WHEN T1.HATMD = T1.NYHOLS01 AND T1.HATMD01 = T1.NYHOLS02 AND T1.HATMD02 = T1.NYHOLS03 THEN T1.HATDT03 END AS HATDT FROM (SELECT PS.HATCALCFLG, PS.NYHOLS01, PS.NYHOLS02, PS.NYHOLS03, DATE_ADD(SBD.DT, INTERVAL PS.KASAN DAY) AS HATDT, DATE_ADD(SBD.DT, INTERVAL (PS.KASAN + 1) DAY) AS HATDT01, DATE_ADD(SBD.DT, INTERVAL (PS.KASAN + 2) DAY) AS HATDT02, DATE_ADD(SBD.DT, INTERVAL (PS.KASAN + 3) DAY) AS HATDT03, CAST(DATE_FORMAT(DATE_ADD(SBD.DT, INTERVAL PS.KASAN DAY), '%%m%%d') AS SIGNED) AS HATMD, CAST(DATE_FORMAT(DATE_ADD(SBD.DT, INTERVAL (PS.KASAN + 1) DAY), '%%m%%d') AS SIGNED) AS HATMD01, CAST(DATE_FORMAT(DATE_ADD(SBD.DT, INTERVAL (PS.KASAN + 2) DAY), '%%m%%d') AS SIGNED) AS HATMD02, CAST(DATE_FORMAT(DATE_ADD(SBD.DT, INTERVAL (PS.KASAN + 3) DAY), '%%m%%d') AS SIGNED) AS HATMD03, SBD.DT FROM (SELECT T2.HATCALCFLG, CASE WHEN T2.HATCALCFLG = 'TODAY' THEN 0 ELSE 1 END KASAN, MAX(CASE WHEN T2.RNO = 1 THEN T2.NYHOLS ELSE 0 END) AS NYHOLS01, MAX(CASE WHEN T2.RNO = 2 THEN T2.NYHOLS ELSE 0 END) AS NYHOLS02, MAX(CASE WHEN T2.RNO = 3 THEN T2.NYHOLS ELSE 0 END) AS NYHOLS03 FROM (SELECT T1.HATCALCFLG, T1.NYHOLS, ROW_NUMBER() OVER (PARTITION BY T1.HATCALCFLG ORDER BY CASE WHEN T1.NYHOLS = 0 THEN 1 ELSE 0 END, T1.NYHOLS) RNO FROM (SELECT PARM.ADDNISU, PARM.GENNISU, PARM.HATCALCFLG, PARM.NYHOLS01 AS NYHOLS FROM INAPARM.PRAM_ADDNISU_TENTEIRYOTKFILE PARM WHERE ADDNISUSMODE = 'ZENTEN06' UNION SELECT PARM.ADDNISU, PARM.GENNISU, PARM.HATCALCFLG, PARM.NYHOLS02 AS NYHOLS FROM INAPARM.PRAM_ADDNISU_TENTEIRYOTKFILE PARM WHERE ADDNISUSMODE = 'ZENTEN06' UNION SELECT PARM.ADDNISU, PARM.GENNISU, PARM.HATCALCFLG, PARM.NYHOLS03 AS NYHOLS FROM INAPARM.PRAM_ADDNISU_TENTEIRYOTKFILE PARM WHERE ADDNISUSMODE = 'ZENTEN06') T1) T2 GROUP BY T2.HATCALCFLG) PS INNER JOIN INAPARM.SYSBATCHDT_TK SBD ON SBD.SMODE = 'DAILY') T1) PN) T2 SET T1.DT = T2.DT, T1.DT_INT = T2.DT_INT, T1.DTTIME = T2.DTTIME, T1.DTTIME_INT = T2.DTTIME_INT, T1.YOBI = T2.YOBI WHERE T1.SMODE = T2.SMODE;commit;" >> %OUTFILE% 2>&1
IF %ERRORLEVEL% GTR 1 GOTO ERROR


:FINAL
EXIT /B 0

:ERROR
EXIT /B 1
