REM [][D2WK_PRAM_READTM]
@ECHO OFF

REM ログフォルダ作成
IF NOT EXIST %~DP0..\logs MKDIR %~DP0..\logs

REM コマンドフォルダ作成
IF NOT EXIST %~DP0..\cmd MKDIR %~DP0..\cmd

REM ログファイルの情報
SET OUTFILE=%~DP0../logs/setup.log
SET OUTTIME=%~DP0../logs/time.log

REM ベースフォルダ
SET BASEDIR=%~DP0..

REM 更新対象の情報
SET INFOSCRIPT=%~DP0..\cmd\%~N0.DB2


SET MSG=%DATE% %TIME% 各マスタ → INAWK.D2WK_PRAM_READTM ロード処理（リードタイムパラメータ(CCR用)作成）
ECHO %MSG%
>> %OUTFILE% ECHO %MSG%
"%MYSQLPATH%mysql" %OPTION% -h %HOST% %DB_NAME% -u %USER_ID% --show-warnings -vv -e  "TRUNCATE TABLE INAWK.D2WK_PRAM_READTM; INSERT IGNORE INTO INAWK.D2WK_PRAM_READTM SELECT DAYS.SYORDT, PRRTM.READTMPTN, PRRTM.READTM_MON, PRRTM.READTM_TUE, PRRTM.READTM_WED, PRRTM.READTM_THU, PRRTM.READTM_FRI, PRRTM.READTM_SAT, PRRTM.READTM_SUN, PRRTM.READTMPTNKN FROM INAPARM.PRAM_READTM PRRTM INNER JOIN (SELECT DATE_FORMAT(DATE_ADD(SBD.DTTIME, INTERVAL + (NUM.SEQ - 31) DAY), '%%Y%%m%%d') AS SYORDT FROM INAPARM.SYSBATCHDT_TK SBD INNER JOIN INAPARM.MSTNUMS NUM ON 1 = 1 AND NUM.SEQ < 430 AND SBD.SMODE = 'DAILY') DAYS ON 1 = 1 AND DAYS.SYORDT BETWEEN PRRTM.APL_STDT AND PRRTM.APL_EDDT INNER JOIN (SELECT DAYS.SYORDT, PRRTM.APL_STDT, PRRTM.APL_EDDT, PRRTM.READTMPTN, ROW_NUMBER() OVER (PARTITION BY PRRTM.READTMPTN, DAYS.SYORDT ORDER BY PRRTM.APL_STDT DESC, PRRTM.APL_EDDT) AS ODRNO FROM INAPARM.PRAM_READTM PRRTM INNER JOIN (SELECT DATE_FORMAT(DATE_ADD(SBD.DTTIME, INTERVAL + (NUM.SEQ - 31) DAY), '%%Y%%m%%d') AS SYORDT FROM INAPARM.SYSBATCHDT_TK SBD INNER JOIN INAPARM.MSTNUMS NUM ON 1 = 1 AND NUM.SEQ < 430 AND SBD.SMODE = 'DAILY') DAYS ON 1 = 1 AND DAYS.SYORDT BETWEEN PRRTM.APL_STDT AND PRRTM.APL_EDDT) JOIN_KEYS ON PRRTM.READTMPTN = JOIN_KEYS.READTMPTN AND DAYS.SYORDT = JOIN_KEYS.SYORDT AND PRRTM.APL_STDT = JOIN_KEYS.APL_STDT AND PRRTM.APL_EDDT = JOIN_KEYS.APL_EDDT AND JOIN_KEYS.ODRNO = 1; commit;" >>%OUTFILE% 2>&1
IF NOT %ERRORLEVEL%==0 GOTO ERROR
"%MYSQLPATH%mysql" %OPTION% -h %HOST% %DB_NAME% -u %USER_ID% --show-warnings -vv -e "ANALYZE TABLE INAWK.D2WK_PRAM_READTM;" >>%OUTFILE% 2>&1
IF NOT %ERRORLEVEL%==0 GOTO ERROR



:FINAL
EXIT /B 0

:ERROR
EXIT /B 1
